{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Git/FE/bookr/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Git/FE/bookr/src/components/BookPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactHtmlParser from 'react-html-parser';\n\nfunction BookPage(props) {\n  // * Grabbing dynamic URL id\n  let id = props.match.params.id; // * State values for book data, author, and image respectively\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        bookData = _useState2[0],\n        setBookData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bookAuthor = _useState4[0],\n        setBookAuthor = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bookCover = _useState6[0],\n        setBookCover = _useState6[1];\n\n  useEffect(() => {\n    axios.get(\"https://www.googleapis.com/books/v1/volumes/\".concat(id)).then(response => {\n      console.log(response.data.volumeInfo);\n      const data = response.data.volumeInfo;\n      setBookData(data);\n      setBookAuthor(response.data.volumeInfo.authors);\n      setBookCover(response.data.volumeInfo.imageLinks.small || response.data.volumeInfo.imageLinks.thumbnail);\n    });\n  }, [id]); // * Needed to create a new state to parse book description\n\n  const description = bookData.description;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"book-content-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"book-cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: bookCover,\n    alt: \"book cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, bookData.title), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, bookData.subtitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, bookData.publisher), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Ratings: \"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Add To My Books\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Purchase\"))), React.createElement(\"div\", {\n    className: \"book-description-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, ReactHtmlParser(description)));\n}\n\nexport default BookPage;","map":{"version":3,"sources":["/Users/admin/Git/FE/bookr/src/components/BookPage.js"],"names":["React","useEffect","useState","axios","ReactHtmlParser","BookPage","props","id","match","params","bookData","setBookData","bookAuthor","setBookAuthor","bookCover","setBookCover","get","then","response","console","log","data","volumeInfo","authors","imageLinks","small","thumbnail","description","title","subtitle","publisher"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,SAASC,QAAT,CAAmBC,KAAnB,EAA0B;AAErB;AACA,MAAIC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA5B,CAHqB,CAKrB;;AALqB,oBAMWL,QAAQ,CAAC,EAAD,CANnB;AAAA;AAAA,QAMdQ,QANc;AAAA,QAMJC,WANI;;AAAA,qBAOeT,QAAQ,CAAC,EAAD,CAPvB;AAAA;AAAA,QAOdU,UAPc;AAAA,QAOFC,aAPE;;AAAA,qBAQaX,QAAQ,CAAC,EAAD,CARrB;AAAA;AAAA,QAQdY,SARc;AAAA,QAQHC,YARG;;AAUrBd,EAAAA,SAAS,CAAC,MAAM;AACXE,IAAAA,KAAK,CACCa,GADN,uDACyDT,EADzD,GAEMU,IAFN,CAEWC,QAAQ,IAAI;AACbC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,UAA1B;AACA,YAAMD,IAAI,GAAGH,QAAQ,CAACG,IAAT,CAAcC,UAA3B;AACAX,MAAAA,WAAW,CAACU,IAAD,CAAX;AACAR,MAAAA,aAAa,CAACK,QAAQ,CAACG,IAAT,CAAcC,UAAd,CAAyBC,OAA1B,CAAb;AACAR,MAAAA,YAAY,CAACG,QAAQ,CAACG,IAAT,CAAcC,UAAd,CAAyBE,UAAzB,CAAoCC,KAApC,IAA6CP,QAAQ,CAACG,IAAT,CAAcC,UAAd,CAAyBE,UAAzB,CAAoCE,SAAlF,CAAZ;AACJ,KARN;AASJ,GAVQ,EAUN,CAACnB,EAAD,CAVM,CAAT,CAVqB,CAsBrB;;AACA,QAAMoB,WAAW,GAAGjB,QAAQ,CAACiB,WAA7B;AAGA,SACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAK,IAAA,GAAG,EAAEb,SAAV;AAAqB,IAAA,GAAG,EAAC,YAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,CADL,EAIM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,QAAQ,CAACkB,KAAd,CADL,EAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKlB,QAAQ,CAACmB,QAAd,CAFL,EAGK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAInB,QAAQ,CAACoB,SAAb,CAHL,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAJJ,EAKK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALL,EAMK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBANL,CAJN,CADL,EAeK;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM1B,eAAe,CAACuB,WAAD,CADrB,CAfL,CADL;AAqBJ;;AAED,eAAetB,QAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport ReactHtmlParser from 'react-html-parser';\n\nfunction BookPage (props) {\n\n     // * Grabbing dynamic URL id\n     let id = props.match.params.id\n\n     // * State values for book data, author, and image respectively\n     const [bookData, setBookData] = useState([])\n     const [bookAuthor, setBookAuthor] = useState([])\n     const [bookCover, setBookCover] = useState('')\n\n     useEffect(() => {\n          axios\n               .get(`https://www.googleapis.com/books/v1/volumes/${id}`)\n               .then(response => {\n                    console.log(response.data.volumeInfo)\n                    const data = response.data.volumeInfo\n                    setBookData(data)\n                    setBookAuthor(response.data.volumeInfo.authors)\n                    setBookCover(response.data.volumeInfo.imageLinks.small || response.data.volumeInfo.imageLinks.thumbnail)\n               })\n     }, [id])\n\n     // * Needed to create a new state to parse book description\n     const description = bookData.description\n\n\n     return(\n          <div >\n               <div className=\"book-content-container\">\n                    <div className=\"book-cover\">\n                         <img src={bookCover} alt=\"book cover\"/>\n                    </div>\n                     <div>\n                          <h3>{bookData.title}</h3>\n                          <h4>{bookData.subtitle}</h4>\n                          <p>{bookData.publisher}</p>\n                         <p>Ratings: </p>\n                          <button>Add To My Books</button>\n                          <button>Purchase</button>\n                     </div>\n                </div>\n \n               <div className=\"book-description-container\">\n                   { ReactHtmlParser(description) } \n               </div>\n          </div>\n     )\n}\n\nexport default BookPage "]},"metadata":{},"sourceType":"module"}