{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Git/FE/bookr/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Git/FE/bookr/src/components/BookList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Ratings from 'react-ratings-declarative';\n\nfunction BookList(props) {\n  // * State for book data after search\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        bookData = _useState2[0],\n        setBookData = _useState2[1]; // * State for search and setting API URL\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchTerm = _useState4[0],\n        setSearchTerm = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        searching = _useState6[0],\n        setSearching = _useState6[1];\n\n  useEffect(() => {\n    if (searching !== '') {\n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\".concat(searching)).then(response => {\n        const data = response.data.items;\n        console.log(data);\n        setBookData(data);\n      });\n    }\n  }, [searching]); // * handleChange sets the input to a state value\n\n  const handleChange = event => {\n    console.log(event.target.value);\n    setSearchTerm(event.target.value);\n  }; // * submitForm pushes the state value as the axios URL\n\n\n  const submitForm = event => {\n    event.preventDefault();\n    setSearching(searchTerm);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"book-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Search: \"), React.createElement(\"input\", {\n    id: \"search\",\n    type: \"text\",\n    name: \"textfield\",\n    placeholder: \"Search\",\n    value: searchTerm,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Search\")), bookData.map(item => React.createElement(\"div\", {\n    key: item.id,\n    className: \"book-list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/book-list/\".concat(item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.volumeInfo.imageLinks.thumbnail,\n    alt: \"book cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Ratings, {\n    rating: item.volumeInfo.averageRating,\n    widgetDimensions: \"25px\",\n    widgetSpacings: \"1px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, item.volumeInfo.title)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, item.volumeInfo.subtitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, item.volumeInfo.publishedDate))));\n}\n\nexport default BookList;","map":{"version":3,"sources":["/Users/admin/Git/FE/bookr/src/components/BookList.js"],"names":["React","useEffect","useState","Link","axios","Ratings","BookList","props","bookData","setBookData","searchTerm","setSearchTerm","searching","setSearching","get","then","response","data","items","console","log","handleChange","event","target","value","submitForm","preventDefault","map","item","id","volumeInfo","imageLinks","thumbnail","averageRating","title","subtitle","publishedDate"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport Ratings from 'react-ratings-declarative';\n\n\nfunction BookList (props){\n\n     // * State for book data after search\n     const [bookData, setBookData] = useState([]);\n\n     // * State for search and setting API URL\n     const [searchTerm, setSearchTerm] = useState('')\n     const [searching, setSearching] = useState('')\n\n     useEffect(() => {\n          if (searching !== ''){\n               axios\n                    .get(`https://www.googleapis.com/books/v1/volumes?q=${searching}`)\n                    .then(response => {\n                         const data = response.data.items;\n                         console.log(data)\n                         setBookData(data);\n                    })\n          }\n     }, [searching])\n\n     // * handleChange sets the input to a state value\n     const handleChange = event => {\n          console.log(event.target.value)\n          setSearchTerm(event.target.value)\n     }\n     // * submitForm pushes the state value as the axios URL\n     const submitForm = event => {\n          event.preventDefault();\n          setSearching(searchTerm)\n     }\n    \n     return(\n          <div className=\"book-list-container\">\n               <form onSubmit={submitForm}>\n                    <label htmlFor=\"search\">Search: </label>\n                    <input \n                         id=\"search\"\n                         type=\"text\"\n                         name=\"textfield\"\n                         placeholder=\"Search\"\n                         value={searchTerm}\n                         onChange={handleChange}\n                    />\n                    <button type=\"submit\">Search</button>\n               </form>\n\n               {\n                    bookData.map(item => (\n                         <div key={item.id} className=\"book-list-item\">\n                              <Link to={`/book-list/${item.id}`}>\n                                   <img src={item.volumeInfo.imageLinks.thumbnail} alt=\"book cover\"/>\n                                   <Ratings\n                                        rating={item.volumeInfo.averageRating}\n                                        widgetDimensions=\"25px\"\n                                        widgetSpacings=\"1px\" >\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                   </Ratings>\n                                   <h3>{item.volumeInfo.title}</h3>\n                              </Link>\n                              <p>{item.volumeInfo.subtitle}</p>\n                              <p>{item.volumeInfo.publishedDate}</p>\n                         </div>\n                    ))\n               }\n          </div>\n     )\n}\nexport default BookList "]},"metadata":{},"sourceType":"module"}