{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\src\\\\components\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst Login = ({\n  touched,\n  errors\n}) => {\n  // STYLING\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      border: '2px solid black',\n      borderRadius: '1%',\n      margin: '8% auto',\n      width: '30%',\n      padding: '3% 1% 1% 1%'\n    },\n    subcontainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      textAlign: 'left',\n      width: '60%',\n      margin: '1% auto'\n    },\n    items: {// border: '2px solid green',\n    },\n    items2: {\n      margin: '3%'\n    },\n    link: {// style={{textDecoration: 'none', color:'black', hover: 'red' }}\n    }\n  })); // const btnStyle = {\n  // \t'background: blue'\n  // }\n  // BUILDING FORM\n\n  const classes = useStyles();\n\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const handleChanges = e => {\n    setUser(_objectSpread({}, user, {\n      [e.target.name]: e.target.value\n    }));\n  }; // const submitForm = e => {\n  // \te.preventDefault();\n  // \tsetUser({name:'', email:'', password:''})\n  // }\n\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"register-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"email-container\",\n    className: classes.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, \"email\", React.createElement(Field, {\n    type: \"text\",\n    name: \"email\" // onChange={handleChanges}\n    ,\n    component: TextField,\n    variant: \"outlined\",\n    margin: \"dense\",\n    helperText: touched.email && errors.email && errors.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"password-container\",\n    className: classes.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"password\", React.createElement(Field, {\n    type: \"password\",\n    name: \"password\" // onChange={handleChanges}\n    ,\n    component: TextField,\n    variant: \"outlined\",\n    margin: \"dense\",\n    helperText: touched.password && errors.password && errors.password,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"submit-button\",\n    className: classes.items2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Button, {\n    variant: \"outlined\",\n    size: \"medium\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"login\")), React.createElement(\"p\", {\n    className: classes.items2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, \"don't have an account?\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: classes.link,\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, \" click to register\")))));\n};\n\nconst FormikLogin = withFormik({\n  mapPropsToValues({\n    email,\n    password\n  }) {\n    return {\n      email: email || '',\n      password: password || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axios.post('https://reqres.in/api/users/', values).then(response => {\n      setStatus(response.data);\n    }).catch(error => console.log('Error in axios', error.response));\n  }\n\n})(Login);\nexport default FormikLogin;","map":{"version":3,"sources":["C:\\Users\\vampi\\Desktop\\LambdaSchool\\Week 8 Unit 2 Build Week\\FE\\bookr\\src\\components\\Login.js"],"names":["React","useState","withFormik","Form","Field","Link","axios","Yup","TextField","makeStyles","Button","Login","touched","errors","useStyles","theme","container","display","flexDirection","border","borderRadius","margin","width","padding","subcontainer","justifyContent","textAlign","items","items2","link","classes","name","email","password","user","setUser","handleChanges","e","target","value","FormikLogin","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","values","setStatus","post","then","response","data","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as Yup from 'yup';\r\nimport { TextField } from 'formik-material-ui';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Login = ({touched, errors}) => {\r\n\t// STYLING\r\n\tconst useStyles = makeStyles(theme => ({\r\n\t\tcontainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tborder: '2px solid black',\r\n\t\t\tborderRadius: '1%',\r\n\t\t\tmargin: '8% auto',\r\n\t\t\twidth: '30%',\r\n\t\t\tpadding: '3% 1% 1% 1%'\r\n\t\t},\r\n\t\tsubcontainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\ttextAlign: 'left',\r\n\t\t\twidth: '60%',\r\n\t\t\tmargin: '1% auto',\r\n\t\t},\r\n\t\titems: {\r\n\t\t\t// border: '2px solid green',\r\n\t\t\t\r\n\t\t},\r\n\t\titems2: {\r\n\t\t\tmargin: '3%'\r\n\t\t},\r\n\t\tlink: {\r\n\t\t\t// style={{textDecoration: 'none', color:'black', hover: 'red' }}\r\n\r\n\t\t}\r\n\t}))\r\n\r\n\t// const btnStyle = {\r\n\t// \t'background: blue'\r\n\t// }\r\n\t\r\n\t// BUILDING FORM\r\n\tconst classes = useStyles();\r\n\r\n\tconst [user, setUser] = useState({name: '', email: '', password: ''});\r\n\tconst handleChanges = e => {\r\n\t\tsetUser({...user, [e.target.name]:e.target.value})\r\n\t}\r\n\r\n\t// const submitForm = e => {\r\n\t// \te.preventDefault();\r\n\t// \tsetUser({name:'', email:'', password:''})\r\n\t// }\r\n\r\n  return(\r\n\t\t<>\r\n\t\t\t<div className='register-form'>\r\n\t\t\t\t<Form className={classes.container}>\r\n\t\t\t\t\t<label className='email-container' className={classes.subcontainer}>\r\n\t\t\t\t\t\temail\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\t// onChange={handleChanges}\r\n\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\thelperText={(touched.email && errors.email) && errors.email}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<label className='password-container' className={classes.subcontainer}>\r\n\t\t\t\t\t\tpassword\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\t// onChange={handleChanges}\r\n\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\thelperText={(touched.password && errors.password) && errors.password}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<label className='submit-button' className={classes.items2}>\r\n\t\t\t\t\t\t<Button variant='outlined' size='medium' type='submit'>login</Button>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<p className={classes.items2}>\r\n\t\t\t\t\t\tdon't have an account?<br></br><Link className={classes.link} to='/register'> click to register</Link>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst FormikLogin = withFormik({\r\n\tmapPropsToValues({email, password}\r\n\t) {\r\n\t\t\treturn {\r\n\t\t\t\temail: email || '',\r\n\t\t\t\tpassword: password || ''\r\n\t\t\t}\r\n\t},\r\n\tvalidationSchema: Yup.object().shape({\r\n\t\temail: Yup.string()\r\n\t\t\t.email('Email is invalid')\r\n\t\t\t.required('Email is required'),\r\n\t\tpassword: Yup.string()\r\n\t\t\t.required('Password is required')\r\n\t}),\r\n\thandleSubmit(values, { setStatus }){\r\n\t\taxios\r\n\t\t.post('https://reqres.in/api/users/', values)\r\n\t\t.then(response => {\r\n\t\t\tsetStatus(response.data);\r\n\t\t})\r\n\t\t.catch(error => console.log('Error in axios', error.response))\r\n\t}\r\n})(Login);\r\n\r\nexport default FormikLogin;"]},"metadata":{},"sourceType":"module"}