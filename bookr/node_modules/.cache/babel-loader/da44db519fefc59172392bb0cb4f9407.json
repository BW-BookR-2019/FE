{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\src\\\\components\\\\BookList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Ratings from 'react-ratings-declarative'; // import { useSelector } from 'react-redux';\n\nfunction BookList(props) {\n  // * State for book data after search\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        bookData = _useState2[0],\n        setBookData = _useState2[1]; // const bookList = useSelector(state => state.bookList);\n  // * State for search and setting API URL\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchTerm = _useState4[0],\n        setSearchTerm = _useState4[1];\n\n  const _useState5 = useState('coding books'),\n        _useState6 = _slicedToArray(_useState5, 2),\n        searching = _useState6[0],\n        setSearching = _useState6[1];\n\n  useEffect(() => {\n    if (searching !== '') {\n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\".concat(searching)).then(response => {\n        const data = response.data.items;\n        console.log(data);\n        setBookData(data);\n      });\n    }\n  }, [searching]); // * handleChange sets the input to a state value\n\n  const handleChange = event => {\n    console.log(event.target.value);\n    setSearchTerm(event.target.value);\n  }; // * submitForm pushes the state value as the axios URL\n\n\n  const submitForm = event => {\n    event.preventDefault();\n    setSearching(searchTerm);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submitForm,\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"search\",\n    type: \"text\",\n    name: \"textfield\",\n    placeholder: \"Search For a Book to Review!\",\n    value: searchTerm,\n    onChange: handleChange,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"search-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"div\", {\n    className: \"book-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, bookData.map(item => React.createElement(\"div\", {\n    key: item.id,\n    className: \"book-list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/book-list/\".concat(item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.volumeInfo.imageLinks.thumbnail,\n    alt: \"book cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Ratings, {\n    rating: 5 // rating={item.volumeInfo.averageRating}\n    ,\n    widgetDimensions: \"15px\",\n    widgetSpacings: \"1px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  })), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, item.volumeInfo.title)), React.createElement(\"p\", {\n    className: \"book-subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, item.volumeInfo.subtitle))))), React.createElement(\"div\", {\n    className: \"review-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"review-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Did You Write A Book, Want Us To Review It?\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Get featured and discovered by people from around the world.\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \"Get Started\"))));\n}\n\nexport default BookList;","map":{"version":3,"sources":["C:\\Users\\vampi\\Desktop\\LambdaSchool\\Week 8 Unit 2 Build Week\\FE\\bookr\\src\\components\\BookList.js"],"names":["React","useEffect","useState","Link","axios","Ratings","BookList","props","bookData","setBookData","searchTerm","setSearchTerm","searching","setSearching","get","then","response","data","items","console","log","handleChange","event","target","value","submitForm","preventDefault","map","item","id","volumeInfo","imageLinks","thumbnail","title","subtitle"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Ratings from 'react-ratings-declarative';\r\n// import { useSelector } from 'react-redux';\r\n\r\n\r\n\r\nfunction BookList (props){\r\n\r\n     // * State for book data after search\r\n     const [bookData, setBookData] = useState([]);\r\n       // const bookList = useSelector(state => state.bookList);\r\n\r\n\r\n     // * State for search and setting API URL\r\n     const [searchTerm, setSearchTerm] = useState('')\r\n     const [searching, setSearching] = useState('coding books')\r\n\r\n     useEffect(() => {\r\n          if (searching !== ''){\r\n               axios\r\n                    .get(`https://www.googleapis.com/books/v1/volumes?q=${searching}`)\r\n                    .then(response => {\r\n                         const data = response.data.items;\r\n                         console.log(data)\r\n                         setBookData(data);\r\n                    })\r\n          }\r\n     }, [searching])\r\n\r\n     // * handleChange sets the input to a state value\r\n     const handleChange = event => {\r\n          console.log(event.target.value)\r\n          setSearchTerm(event.target.value)\r\n     }\r\n     // * submitForm pushes the state value as the axios URL\r\n     const submitForm = event => {\r\n          event.preventDefault();\r\n          setSearching(searchTerm)\r\n     }\r\n    \r\n     return(\r\n          <div>\r\n\r\n          <div>\r\n          </div>\r\n  \r\n          <div className=\"search-container\">\r\n               <form onSubmit={submitForm} className=\"form-container\">\r\n                    <input \r\n                         id=\"search\"\r\n                         type=\"text\"\r\n                         name=\"textfield\"\r\n                         placeholder=\"Search For a Book to Review!\"\r\n                         value={searchTerm}\r\n                         onChange={handleChange}\r\n                         className=\"search-form\"\r\n                    />\r\n                    <button type=\"submit\" className=\"search-button\">Search</button>\r\n               </form>\r\n\r\n               <div className=\"book-list-container\">\r\n               {\r\n                    bookData.map(item => (\r\n                         <div key={item.id} className=\"book-list-item\">\r\n                              <Link to={`/book-list/${item.id}`}>\r\n                                   <img src={item.volumeInfo.imageLinks.thumbnail} alt=\"book cover\"/>\r\n                                   <Ratings\r\n                                        rating={5}\r\n                                        // rating={item.volumeInfo.averageRating}\r\n                                        widgetDimensions=\"15px\"\r\n                                        widgetSpacings=\"1px\" >\r\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                                   </Ratings>\r\n                                   <h3>{item.volumeInfo.title}</h3>\r\n                              </Link>\r\n                              <p className=\"book-subtitle\">{item.volumeInfo.subtitle}</p>\r\n                              {/* <p>{item.searchInfo.textSnippet}</p> */}\r\n                         </div>\r\n                    ))\r\n               }\r\n               </div>\r\n          </div>\r\n\r\n          <div className=\"review-container\">\r\n               <div className=\"review-content\">\r\n                    <h3>Did You Write A Book, Want Us To Review It?</h3>\r\n                    <p>Get featured and discovered by people from around the world.</p>\r\n                    <button>Get Started</button>\r\n               </div>\r\n          </div>\r\n\r\n          </div>\r\n     )\r\n          }\r\n          export default BookList;\r\n"]},"metadata":{},"sourceType":"module"}