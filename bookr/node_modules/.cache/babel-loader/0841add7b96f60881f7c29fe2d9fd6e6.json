{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { GET_START, GET_SUCCESS, GET_FAILURE } from '../actions';\nconst initialState = {\n  bookList: {},\n  isFetching: false,\n  error: null,\n  isLoggedIn: false\n};\nexport const reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_START:\n      return _objectSpread({}, state, {\n        isFetching: true,\n        error: null\n      });\n\n    case GET_SUCCESS:\n      return _objectSpread({}, state, {\n        bookList: action.payload,\n        isFetching: false\n      });\n\n    case GET_FAILURE:\n      return _objectSpread({}, state, {\n        error: action.payload,\n        isFetching: false\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:\\Users\\vampi\\Desktop\\LambdaSchool\\Week 8 Unit 2 Build Week\\FE\\bookr\\src\\reducers\\index.js"],"names":["GET_START","GET_SUCCESS","GET_FAILURE","initialState","bookList","isFetching","error","isLoggedIn","reducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,WAApB,EAAiCC,WAAjC,QAAoD,YAApD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,UAAU,EAAE,KAFO;AAGnBC,EAAAA,KAAK,EAAE,IAHY;AAInBC,EAAAA,UAAU,EAAE;AAJO,CAArB;AAOA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACvD,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKX,SAAL;AACE,+BACKS,KADL;AAEEJ,QAAAA,UAAU,EAAE,IAFd;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAKL,WAAL;AACE,+BACKQ,KADL;AAEEL,QAAAA,QAAQ,EAAEM,MAAM,CAACE,OAFnB;AAGEP,QAAAA,UAAU,EAAE;AAHd;;AAKF,SAAKH,WAAL;AACE,+BACKO,KADL;AAEEH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFhB;AAGEP,QAAAA,UAAU,EAAE;AAHd;;AAKF;AACE,aAAOI,KAAP;AApBJ;AAsBD,CAvBM","sourcesContent":["import { GET_START, GET_SUCCESS, GET_FAILURE } from '../actions';\r\n\r\nconst initialState = {\r\n  bookList: {},\r\n  isFetching: false,\r\n  error: null,\r\n  isLoggedIn: false\r\n}\r\n\r\nexport const reducer = (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case GET_START:\r\n      return {\r\n        ...state,\r\n        isFetching: true,\r\n        error: null\r\n      }\r\n    case GET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        bookList: action.payload,\r\n        isFetching: false\r\n      }\r\n    case GET_FAILURE:\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        isFetching: false,\r\n      }\r\n    default: \r\n      return state;\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}