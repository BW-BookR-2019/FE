{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\src\\\\components\\\\BookPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactHtmlParser from 'react-html-parser';\nimport Ratings from 'react-ratings-declarative';\nimport { Link } from 'react-router-dom'; // import { useSelector } from 'react-redux';\n\nimport DeleteModal from './DeleteModal';\n\nfunction BookPage(props) {\n  // * Grabbing dynamic URL id\n  let id = props.match.params.id; // const bookList = useSelector(state => state.bookList);\n  // * State values for book data, author, and image respectively\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        bookData = _useState2[0],\n        setBookData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bookAuthor = _useState4[0],\n        setBookAuthor = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bookCover = _useState6[0],\n        setBookCover = _useState6[1];\n\n  useEffect(() => {\n    axios.get(\"https://www.googleapis.com/books/v1/volumes/\".concat(id)).then(response => {\n      console.log(response.data.volumeInfo);\n      const data = response.data.volumeInfo;\n      setBookData(data);\n      setBookAuthor(response.data.volumeInfo.authors);\n      setBookCover(response.data.volumeInfo.imageLinks.small || response.data.volumeInfo.imageLinks.thumbnail);\n    });\n  }, [id]); // * Needed to create a new state to parse book description\n\n  const description = bookData.description;\n  return React.createElement(\"div\", {\n    className: \"book-content-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"book-cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: bookCover,\n    alt: \"book cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, bookData.title), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, bookData.subtitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"Ratings: \", React.createElement(Ratings, {\n    rating: 5,\n    widgetDimensions: \"15px\",\n    widgetSpacings: \"1px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, bookAuthor.map(item => React.createElement(\"p\", {\n    key: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \" By \", item))), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Add To My Books\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Purchase\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Link, {\n    style: {\n      color: 'white'\n    },\n    to: \"/book-list/\".concat(id, \"/add-review\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Add a Review\")), React.createElement(DeleteModal, {\n    id: id,\n    history: props.history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"book-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, ReactHtmlParser(description)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"Publisher: \", bookData.publisher)));\n}\n\nexport default BookPage;","map":{"version":3,"sources":["C:\\Users\\vampi\\Desktop\\LambdaSchool\\Week 8 Unit 2 Build Week\\FE\\bookr\\src\\components\\BookPage.js"],"names":["React","useEffect","useState","axios","ReactHtmlParser","Ratings","Link","DeleteModal","BookPage","props","id","match","params","bookData","setBookData","bookAuthor","setBookAuthor","bookCover","setBookCover","get","then","response","console","log","data","volumeInfo","authors","imageLinks","small","thumbnail","description","title","subtitle","map","item","color","history","publisher"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport axios from 'axios'\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport Ratings from 'react-ratings-declarative';\r\nimport { Link } from 'react-router-dom'\r\n// import { useSelector } from 'react-redux';\r\n\r\nimport DeleteModal from './DeleteModal';\r\n\r\nfunction BookPage (props) {\r\n\r\n     // * Grabbing dynamic URL id\r\n     let id = props.match.params.id\r\n       // const bookList = useSelector(state => state.bookList);\r\n\r\n\r\n     // * State values for book data, author, and image respectively\r\n     const [bookData, setBookData] = useState([])\r\n     const [bookAuthor, setBookAuthor] = useState([])\r\n     const [bookCover, setBookCover] = useState('')\r\n\r\n     useEffect(() => {\r\n          axios\r\n               .get(`https://www.googleapis.com/books/v1/volumes/${id}`)\r\n               .then(response => {\r\n                    console.log(response.data.volumeInfo)\r\n                    const data = response.data.volumeInfo\r\n                    setBookData(data)\r\n                    setBookAuthor(response.data.volumeInfo.authors)\r\n                    setBookCover(response.data.volumeInfo.imageLinks.small || response.data.volumeInfo.imageLinks.thumbnail)\r\n               })\r\n     }, [id])\r\n\r\n     // * Needed to create a new state to parse book description\r\n     const description = bookData.description\r\n\r\n\r\n     return(\r\n               <div className=\"book-content-container\">\r\n                    <div className=\"book-cover\">\r\n                         <img src={bookCover} alt=\"book cover\"/>\r\n                    </div>\r\n                     <div>\r\n                          <h3>{bookData.title}</h3>\r\n                          <h4>{bookData.subtitle}</h4>\r\n                    <p>Ratings: <Ratings\r\n                         rating={5}\r\n                         widgetDimensions=\"15px\"\r\n                         widgetSpacings=\"1px\" >\r\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\r\n                    </Ratings></p>\r\n                         <div>\r\n                              {bookAuthor.map(item => (\r\n                                   <p key={item}> By {item}</p>\r\n                              ))}\r\n                         </div>\r\n                          <button>Add To My Books</button>\r\n                          <button>Purchase</button>\r\n                          <button><Link style={{color: 'white'}} to={`/book-list/${id}/add-review`}>Add a Review</Link></button>\r\n                         <DeleteModal id={id} history={props.history} />\r\n\r\n                          <div className=\"book-description\">\r\n                              {ReactHtmlParser(description)} \r\n                          </div>\r\n                         <p>Publisher: {bookData.publisher}</p>\r\n                     </div>\r\n                </div>\r\n     )\r\n}\r\n\r\nexport default BookPage;\r\n\r\n"]},"metadata":{},"sourceType":"module"}