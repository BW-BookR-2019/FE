{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\src\\\\components\\\\Login.js\";\nimport React from 'react';\nimport { withFormik, Form, Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions';\nimport * as Yup from 'yup';\nimport { TextField } from 'formik-material-ui';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst Login = ({\n  touched,\n  errors\n}) => {\n  // STYLING\n  const useStyles = makeStyles(theme => ({\n    container: {\n      display: 'flex',\n      flexDirection: 'column',\n      border: '2px solid #cf4e28',\n      borderRadius: '1%',\n      margin: '8% auto',\n      width: '30%',\n      padding: '3% 1% 1% 1%'\n    },\n    subcontainer: {\n      display: 'flex',\n      justifyContent: 'center',\n      flexDirection: 'column',\n      textAlign: 'left',\n      width: '60%',\n      margin: '1% auto'\n    },\n    items: {\n      margin: '3% auto',\n      textAlign: 'center'\n    },\n    link: {\n      textDecoration: 'none',\n      color: 'white',\n      transition: '0.5s',\n      '&:hover': {\n        color: '#edb901',\n        transition: '0.3s'\n      }\n    },\n    btn: {\n      textTransform: 'lowercase',\n      color: 'white',\n      borderColor: 'white',\n      backgroundColor: '#edb901',\n      '&:hover': {\n        backgroundColor: '#cf4e28',\n        transition: '0.3s'\n      }\n    },\n    inputOutline: {\n      backgroundColor: 'white',\n      borderRadius: '0.25rem',\n      '&$focusedOutline $notchedOutline': {\n        borderColor: '#cf4e28 !important'\n      },\n      '&:hover': {\n        borderColor: '2px solid #edb901'\n      }\n    },\n    focusedOutline: {},\n    notchedOutline: {\n      // borderColor: '#edb901 !important',\n      border: '2px solid #edb901'\n    }\n  })); // BUILDING FORM\n\n  const classes = useStyles();\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    className: \"register-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"email-container\",\n    className: classes.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"email\", React.createElement(Field, {\n    type: \"text\",\n    name: \"email\",\n    component: TextField,\n    variant: \"outlined\",\n    margin: \"dense\",\n    helperText: touched.email && errors.email && errors.email,\n    InputProps: {\n      classes: {\n        root: classes.inputOutline,\n        focused: classes.focusedOutline,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"password-container\",\n    className: classes.subcontainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, \"password\", React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    component: TextField,\n    variant: \"outlined\",\n    margin: \"dense\",\n    helperText: touched.password && errors.password && errors.password,\n    InputProps: {\n      classes: {\n        root: classes.inputOutline,\n        focused: classes.focusedOutline,\n        notchedOutline: classes.notchedOutline\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"submit-button\",\n    className: classes.items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.btn,\n    variant: \"outlined\",\n    size: \"medium\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"login\")), React.createElement(\"p\", {\n    className: classes.items,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, \"don't have an account?\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }), React.createElement(Link, {\n    className: classes.link,\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, \" click to register\")))));\n};\n\nconst FormikLogin = withFormik({\n  mapPropsToValues({\n    email,\n    password\n  }) {\n    return {\n      email: email || '',\n      password: password || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  }),\n\n  handleSubmit(values, {\n    props\n  }) {\n    props.login(values, props.history);\n  }\n\n})(Login);\nexport default connect(null, {\n  login\n})(FormikLogin);","map":{"version":3,"sources":["C:\\Users\\vampi\\Desktop\\LambdaSchool\\Week 8 Unit 2 Build Week\\FE\\bookr\\src\\components\\Login.js"],"names":["React","withFormik","Form","Field","Link","connect","login","Yup","TextField","makeStyles","Button","Login","touched","errors","useStyles","theme","container","display","flexDirection","border","borderRadius","margin","width","padding","subcontainer","justifyContent","textAlign","items","link","textDecoration","color","transition","btn","textTransform","borderColor","backgroundColor","inputOutline","focusedOutline","notchedOutline","classes","email","root","focused","password","FormikLogin","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","values","props","history"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions';\r\nimport * as Yup from 'yup';\r\nimport { TextField } from 'formik-material-ui';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\nconst Login = ({touched, errors}) => {\r\n\t// STYLING\r\n\tconst useStyles = makeStyles(theme => ({\r\n\t\tcontainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\tborder: '2px solid #cf4e28',\r\n\t\t\tborderRadius: '1%',\r\n\t\t\tmargin: '8% auto',\r\n\t\t\twidth: '30%',\r\n\t\t\tpadding: '3% 1% 1% 1%'\r\n\t\t},\r\n\t\tsubcontainer: {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\tflexDirection: 'column',\r\n\t\t\ttextAlign: 'left',\r\n\t\t\twidth: '60%',\r\n\t\t\tmargin: '1% auto',\r\n\t\t},\r\n\t\titems: {\r\n\t\t\tmargin: '3% auto',\r\n\t\t\ttextAlign: 'center'\r\n\t\t},\r\n\t\tlink: {\r\n\t\t\ttextDecoration: 'none',\r\n\t\t\tcolor: 'white',\r\n\t\t\ttransition: '0.5s',\r\n\t\t\t'&:hover': {\r\n\t\t\t\tcolor: '#edb901',\r\n\t\t\t\ttransition: '0.3s'\r\n\t\t\t}\r\n\t\t},\r\n\t\tbtn: {\r\n\t\t\ttextTransform: 'lowercase',\r\n\t\t\tcolor: 'white',\r\n\t\t\tborderColor: 'white',\r\n\t\t\tbackgroundColor: '#edb901',\r\n\t\t\t'&:hover': {\r\n\t\t\t\tbackgroundColor: '#cf4e28',\r\n\t\t\t\ttransition: '0.3s'\r\n\t\t\t}\r\n\t\t},\r\n\t\tinputOutline: {\r\n\t\t\tbackgroundColor: 'white',\r\n\t\t\tborderRadius: '0.25rem',\r\n\t\t\t'&$focusedOutline $notchedOutline' : {\r\n\t\t\t\tborderColor: '#cf4e28 !important'\r\n\t\t\t},\r\n\t\t\t'&:hover': {\r\n\t\t\t\tborderColor: '2px solid #edb901',\r\n\t\t\t}\r\n\t\t},\r\n\t\tfocusedOutline: {},\r\n\t\tnotchedOutline: {\r\n\t\t\t// borderColor: '#edb901 !important',\r\n\t\t\tborder: '2px solid #edb901',\r\n\t\t}\r\n\t}))\r\n\r\n\t// BUILDING FORM\r\n\tconst classes = useStyles();\r\n\r\n  return(\r\n\t\t<>\r\n\t\t\t<div className='register-form'>\r\n\t\t\t\t<Form className={classes.container}>\r\n\t\t\t\t\t<label className='email-container' className={classes.subcontainer}>\r\n\t\t\t\t\t\temail\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\thelperText={(touched.email && errors.email) && errors.email}\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\troot: classes.inputOutline,\r\n\t\t\t\t\t\t\t\tfocused: classes.focusedOutline,\r\n\t\t\t\t\t\t\t\tnotchedOutline: classes.notchedOutline\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t<label className='password-container' className={classes.subcontainer}>\r\n\t\t\t\t\t\tpassword\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\thelperText={(touched.password && errors.password) && errors.password}\r\n\t\t\t\t\t\tInputProps={{\r\n\t\t\t\t\t\t\tclasses: {\r\n\t\t\t\t\t\t\t\troot: classes.inputOutline,\r\n\t\t\t\t\t\t\t\tfocused: classes.focusedOutline,\r\n\t\t\t\t\t\t\t\tnotchedOutline: classes.notchedOutline\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<label className='submit-button' className={classes.items}>\r\n\t\t\t\t\t\t<Button className={classes.btn} variant='outlined' size='medium' type='submit'>login</Button>\r\n\t\t\t\t\t</label>\r\n\r\n\t\t\t\t\t<p className={classes.items}>\r\n\t\t\t\t\t\tdon't have an account?<br></br><Link className={classes.link} to='/register'> click to register</Link>\r\n\t\t\t\t\t</p>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst FormikLogin = withFormik({\r\n\tmapPropsToValues({email, password}\r\n\t) {\r\n\t\t\treturn {\r\n\t\t\t\temail: email || '',\r\n\t\t\t\tpassword: password || ''\r\n\t\t\t}\r\n\t},\r\n\tvalidationSchema: Yup.object().shape({\r\n\t\temail: Yup.string()\r\n\t\t\t.email('Email is invalid')\r\n\t\t\t.required('Email is required'),\r\n\t\tpassword: Yup.string()\r\n\t\t\t.required('Password is required')\r\n\t}),\r\n\thandleSubmit(values, { props }){\r\n\t\tprops.login(values, props.history);\r\n\t}\r\n})(Login);\r\n\r\nexport default connect(null, { login })(FormikLogin);\r\n"]},"metadata":{},"sourceType":"module"}