{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Git/FE/bookr/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Git/FE/bookr/src/components/BookPage.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport ReactHtmlParser from 'react-html-parser';\nimport Ratings from 'react-ratings-declarative';\nimport reviews from '../reviewdata'; // import { useSelector } from 'react-redux';\n\nfunction BookPage(props) {\n  // * Grabbing dynamic URL id\n  let id = props.match.params.id; // const bookList = useSelector(state => state.bookList);\n  // * State values for book data, author, and image respectively\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        bookData = _useState2[0],\n        setBookData = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bookAuthor = _useState4[0],\n        setBookAuthor = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bookCover = _useState6[0],\n        setBookCover = _useState6[1];\n\n  useEffect(() => {\n    axios.get(\"https://www.googleapis.com/books/v1/volumes/\".concat(id)).then(response => {\n      console.log(response.data.volumeInfo);\n      const data = response.data.volumeInfo;\n      setBookData(data);\n      setBookAuthor(response.data.volumeInfo.authors);\n      setBookCover(response.data.volumeInfo.imageLinks.small || response.data.volumeInfo.imageLinks.thumbnail);\n    });\n  }, [id]); // * Needed to create a new state to parse book description\n\n  const description = bookData.description; // * State to hold review data\n\n  const _useState7 = useState(reviews),\n        _useState8 = _slicedToArray(_useState7, 2),\n        review = _useState8[0],\n        setReview = _useState8[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"book-content-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"book-cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: bookCover,\n    alt: \"book cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, bookData.title), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, bookData.subtitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Ratings: \", React.createElement(Ratings, {\n    rating: 5,\n    widgetDimensions: \"15px\",\n    widgetSpacings: \"1px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, bookAuthor.map(item => React.createElement(\"p\", {\n    key: item,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \" By \", item))), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Add To My Books\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Purchase\"), React.createElement(\"div\", {\n    className: \"book-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, ReactHtmlParser(description)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, \"Publisher: \", bookData.publisher))), React.createElement(\"div\", {\n    className: \"review-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, \"What People Have to Say\"), review.map(item => React.createElement(\"div\", {\n    className: \"review-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    className: \"review-content-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, item.user, \" \", React.createElement(Ratings, {\n    rating: item.rating,\n    widgetDimensions: \"12px\",\n    widgetSpacings: \"1px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"#f3bb01\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, item.review)))));\n}\n\nexport default BookPage;","map":{"version":3,"sources":["/Users/admin/Git/FE/bookr/src/components/BookPage.js"],"names":["React","useEffect","useState","axios","ReactHtmlParser","Ratings","reviews","BookPage","props","id","match","params","bookData","setBookData","bookAuthor","setBookAuthor","bookCover","setBookCover","get","then","response","console","log","data","volumeInfo","authors","imageLinks","small","thumbnail","description","review","setReview","title","subtitle","map","item","publisher","user","rating"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from 'axios'\nimport ReactHtmlParser from 'react-html-parser';\nimport Ratings from 'react-ratings-declarative';\nimport reviews from '../reviewdata'\n// import { useSelector } from 'react-redux';\n\n\n\nfunction BookPage (props) {\n\n     // * Grabbing dynamic URL id\n     let id = props.match.params.id\n       // const bookList = useSelector(state => state.bookList);\n\n\n     // * State values for book data, author, and image respectively\n     const [bookData, setBookData] = useState([])\n     const [bookAuthor, setBookAuthor] = useState([])\n     const [bookCover, setBookCover] = useState('')\n\n     useEffect(() => {\n          axios\n               .get(`https://www.googleapis.com/books/v1/volumes/${id}`)\n               .then(response => {\n                    console.log(response.data.volumeInfo)\n                    const data = response.data.volumeInfo\n                    setBookData(data)\n                    setBookAuthor(response.data.volumeInfo.authors)\n                    setBookCover(response.data.volumeInfo.imageLinks.small || response.data.volumeInfo.imageLinks.thumbnail)\n               })\n     }, [id])\n\n     // * Needed to create a new state to parse book description\n     const description = bookData.description\n\n\n     // * State to hold review data\n     const [review, setReview] = useState(reviews)\n\n\n     return(\n          <div>\n               <div className=\"book-content-container\">\n                    <div className=\"book-cover\">\n                         <img src={bookCover} alt=\"book cover\"/>\n                    </div>\n                    <div>\n                          <h3>{bookData.title}</h3>\n                          <h4>{bookData.subtitle}</h4>\n                    <p>Ratings: <Ratings\n                         rating={5}\n                         widgetDimensions=\"15px\"\n                         widgetSpacings=\"1px\" >\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                         <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                    </Ratings></p>\n                         <div>\n                              {bookAuthor.map(item => (\n                                   <p key={item}> By {item}</p>\n                              ))}\n                         </div>\n                          <button>Add To My Books</button>\n                          <button>Purchase</button>\n                          <div className=\"book-description\">\n                              {ReactHtmlParser(description)} \n                          </div>\n                         <p>Publisher: {bookData.publisher}</p>\n                     </div>\n               </div>\n               <div className='review-section'>\n                    <h2>What People Have to Say</h2>\n                    {\n                         review.map(item => (\n                              <div className=\"review-section\">\n                                   <p className=\"review-content-section\">{item.user} <Ratings\n                                        rating={item.rating}\n                                        widgetDimensions=\"12px\"\n                                        widgetSpacings=\"1px\" >\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                                        <Ratings.Widget widgetRatedColor=\"#f3bb01\" />\n                                   </Ratings></p>\n                                   <p>{item.review}</p>\n                              </div>\n                         ))\n                    }\n               </div>\n\n          </div>\n     )\n}\n\nexport default BookPage;\n"]},"metadata":{},"sourceType":"module"}