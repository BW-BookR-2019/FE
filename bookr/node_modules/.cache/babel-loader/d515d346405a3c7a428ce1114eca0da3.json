{"ast":null,"code":"import _slicedToArray from \"/Users/admin/Git/FE/bookr/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/admin/Git/FE/bookr/src/components/BookList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport Ratings from 'react-ratings-declarative';\n\nfunction BookList(props) {\n  // * State for book data after search\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        bookData = _useState2[0],\n        setBookData = _useState2[1]; // * State for search and setting API URL\n\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchTerm = _useState4[0],\n        setSearchTerm = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        searching = _useState6[0],\n        setSearching = _useState6[1];\n\n  useEffect(() => {\n    if (searching !== '') {\n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\".concat(searching)).then(response => {\n        const data = response.data.items;\n        console.log(data);\n        setBookData(data);\n      });\n    }\n  }, [searching]); // * handleChange sets the input to a state value\n\n  const handleChange = event => {\n    console.log(event.target.value);\n    setSearchTerm(event.target.value);\n  }; // * submitForm pushes the state value as the axios URL\n\n\n  const submitForm = event => {\n    event.preventDefault();\n    setSearching(searchTerm);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"search-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"search\",\n    type: \"text\",\n    name: \"textfield\",\n    placeholder: \"Search For a Book to Review!\",\n    value: searchTerm,\n    onChange: handleChange,\n    className: \"search-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"search-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Search\")), React.createElement(\"div\", {\n    className: \"book-list-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, bookData.map(item => React.createElement(\"div\", {\n    key: item.id,\n    className: \"book-list-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/book-list/\".concat(item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.volumeInfo.imageLinks.thumbnail,\n    alt: \"book cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(Ratings, {\n    rating: 5 // rating={item.volumeInfo.averageRating}\n    ,\n    widgetDimensions: \"15px\",\n    widgetSpacings: \"1px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, item.volumeInfo.title)), React.createElement(\"p\", {\n    className: \"book-subtitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, item.volumeInfo.subtitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, item.searchInfo.textSnippet))))), React.createElement(\"div\", {\n    className: \"review-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"review-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Did You Write A Book, Want Us To Review It?\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Stay in the know!\")));\n}\n\nexport default BookList;","map":{"version":3,"sources":["/Users/admin/Git/FE/bookr/src/components/BookList.js"],"names":["React","useEffect","useState","Link","axios","Ratings","BookList","props","bookData","setBookData","searchTerm","setSearchTerm","searching","setSearching","get","then","response","data","items","console","log","handleChange","event","target","value","submitForm","preventDefault","map","item","id","volumeInfo","imageLinks","thumbnail","title","subtitle","searchInfo","textSnippet"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {Link} from 'react-router-dom'\nimport axios from 'axios'\nimport Ratings from 'react-ratings-declarative';\n\n\nfunction BookList (props){\n\n     // * State for book data after search\n     const [bookData, setBookData] = useState([]);\n\n     // * State for search and setting API URL\n     const [searchTerm, setSearchTerm] = useState('')\n     const [searching, setSearching] = useState('')\n\n     useEffect(() => {\n          if (searching !== ''){\n               axios\n                    .get(`https://www.googleapis.com/books/v1/volumes?q=${searching}`)\n                    .then(response => {\n                         const data = response.data.items;\n                         console.log(data)\n                         setBookData(data);\n                    })\n          }\n     }, [searching])\n\n     // * handleChange sets the input to a state value\n     const handleChange = event => {\n          console.log(event.target.value)\n          setSearchTerm(event.target.value)\n     }\n     // * submitForm pushes the state value as the axios URL\n     const submitForm = event => {\n          event.preventDefault();\n          setSearching(searchTerm)\n     }\n    \n     return(\n          <div>\n  \n          <div className=\"search-container\">\n               <form onSubmit={submitForm}>\n                    <input \n                         id=\"search\"\n                         type=\"text\"\n                         name=\"textfield\"\n                         placeholder=\"Search For a Book to Review!\"\n                         value={searchTerm}\n                         onChange={handleChange}\n                         className=\"search-form\"\n                    />\n                    <button type=\"submit\" className=\"search-button\">Search</button>\n               </form>\n\n               <div className=\"book-list-container\">\n               {\n                    bookData.map(item => (\n                         <div key={item.id} className=\"book-list-item\">\n                              <Link to={`/book-list/${item.id}`}>\n                                   <img src={item.volumeInfo.imageLinks.thumbnail} alt=\"book cover\"/>\n                                   <Ratings\n                                        rating={5}\n                                        // rating={item.volumeInfo.averageRating}\n                                        widgetDimensions=\"15px\"\n                                        widgetSpacings=\"1px\" >\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                        <Ratings.Widget widgetRatedColor=\"gold\" />\n                                   </Ratings>\n                                   <h3>{item.volumeInfo.title}</h3>\n                              </Link>\n                              <p className=\"book-subtitle\">{item.volumeInfo.subtitle}</p>\n                              <p>{item.searchInfo.textSnippet}</p>\n                         </div>\n                    ))\n               }\n               </div>\n          </div>\n\n          <div className=\"review-container\">\n               <div className=\"review-content\">\n                    <h3>Did You Write A Book, Want Us To Review It?</h3>\n                    <p></p>\n               </div>\n          </div>\n          <div className=\"footer\">\n          <h3>Stay in the know!</h3>\n          </div>\n          </div>\n     )\n}\nexport default BookList "]},"metadata":{},"sourceType":"module"}