{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\src\\\\components\\\\Login.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { withFormik, Form, Field } from 'formik';\nimport { TextField } from 'formik-material-ui';\n\nconst Login = ({\n  touched,\n  errors\n}) => {\n  // STYLING\n  // BUILDING FORM\n  const _useState = useState({\n    name: '',\n    email: '',\n    password: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        user = _useState2[0],\n        setUser = _useState2[1];\n\n  const handleChanges = e => {\n    setUser(_objectSpread({}, user, {\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Hello Login page!\"), React.createElement(\"div\", {\n    className: \"register-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"textContainer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Email\", React.createElement(Field, {\n    type: \"text\",\n    \"formik-material-ui\": true,\n    name: \"email\",\n    component: TextField,\n    variant: \"outlined\",\n    margin: \"dense\",\n    helpertext: touched.email && errors.email && React.createElement(\"p\", {\n      className: \"error\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, errors.email),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), \"Password\", React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\" // onChange={handleChanges}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, errors.password)), React.createElement(\"label\", {\n    className: \"submit-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"login\")), React.createElement(Link, {\n    to: \"/register\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"don't have an account? click to register\"))));\n};\n\nconst FormikLogin = withFormik({\n  mapPropsToValues({\n    email,\n    password\n  }) {\n    return {\n      email: email || '',\n      password: password || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email('Email is invalid').required('Email is required'),\n    password: Yup.string().required('Password is required')\n  }),\n\n  handleSubmit(values, {\n    setStatus\n  }) {\n    axios.post('https://reqres.in/api/users/', values).then(response => {\n      setStatus(response.data);\n    }).catch(error => console.log('Error in axios', error.response));\n  }\n\n})(Login);\nexport default FormikLogin;","map":{"version":3,"sources":["C:\\Users\\vampi\\Desktop\\LambdaSchool\\Week 8 Unit 2 Build Week\\FE\\bookr\\src\\components\\Login.js"],"names":["React","useState","Link","axios","Yup","withFormik","Form","Field","TextField","Login","touched","errors","name","email","password","user","setUser","handleChanges","e","target","value","FormikLogin","mapPropsToValues","validationSchema","object","shape","string","required","handleSubmit","values","setStatus","post","then","response","data","catch","error","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as Yup from 'yup';\r\nimport { withFormik, Form, Field } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\n\r\n\r\nconst Login = ({touched, errors}) => {\r\n\t// STYLING\r\n\r\n\t// BUILDING FORM\r\n\t\r\n\tconst [user, setUser] = useState({name: '', email: '', password: ''});\r\n\tconst handleChanges = e => {\r\n\t\tsetUser({...user, [e.target.name]:e.target.value})\r\n\t}\r\n\r\n  return(\r\n\t\t<>\r\n\t\t\t<div>Hello Login page!</div>\r\n\t\t\t<div className='register-form'>\r\n\t\t\t\t{/* IMPORT FORM AND FIELD FROM FORMIK AND CREATE FORM WITH 1 FIELD AS A TEST */}\r\n\t\t\t\t<Form>\r\n\t\t\t\t\t<label className='textContainer'>\r\n\t\t\t\t\t\tEmail\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\ttype='text'formik-material-ui\r\n\t\t\t\t\t\tname='email'\r\n\t\t\t\t\t\tcomponent={TextField}\r\n\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\tmargin='dense'\r\n\t\t\t\t\t\thelpertext= {touched.email && errors.email &&\r\n\t\t\t\t\t\t\t<p className='error'>{errors.email}</p>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\r\n\r\n\t\t\t\t\t\tPassword\r\n\t\t\t\t\t\t<Field\r\n\t\t\t\t\t\ttype='password'\r\n\t\t\t\t\t\tname='password'\r\n\t\t\t\t\t\tplaceholder='Password'\r\n\t\t\t\t\t\t// onChange={handleChanges}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{touched.password && errors.password &&\r\n\t\t\t\t\t\t\t<p className='error'>{errors.password}</p>\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<label className='submit-button'>\r\n\t\t\t\t\t\t<button type='submit'>login</button>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<Link to='/register'>don't have an account? click to register</Link>\r\n\t\t\t\t</Form>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst FormikLogin = withFormik({\r\n\tmapPropsToValues({email, password}\r\n\t) {\r\n\t\t\treturn {\r\n\t\t\t\temail: email || '',\r\n\t\t\t\tpassword: password || ''\r\n\t\t\t}\r\n\t},\r\n\tvalidationSchema: Yup.object().shape({\r\n\t\temail: Yup.string()\r\n\t\t\t.email('Email is invalid')\r\n\t\t\t.required('Email is required'),\r\n\t\tpassword: Yup.string()\r\n\t\t\t.required('Password is required')\r\n\t}),\r\n\thandleSubmit(values, { setStatus }){\r\n\t\taxios\r\n\t\t.post('https://reqres.in/api/users/', values)\r\n\t\t.then(response => {\r\n\t\t\tsetStatus(response.data);\r\n\t\t})\r\n\t\t.catch(error => console.log('Error in axios', error.response))\r\n\t}\r\n})(Login);\r\n\r\nexport default FormikLogin;"]},"metadata":{},"sourceType":"module"}