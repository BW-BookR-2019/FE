{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\vampi\\\\Desktop\\\\LambdaSchool\\\\Week 8 Unit 2 Build Week\\\\FE\\\\bookr\\\\src\\\\components\\\\BookList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios'; // import Ratings from 'react-ratings-declarative';\n\nfunction BookList(props) {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        bookData = _useState2[0],\n        setBookData = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        searchTerm = _useState4[0],\n        setSearchTerm = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        searching = _useState6[0],\n        setSearching = _useState6[1];\n\n  useEffect(() => {\n    if (searching !== '') {\n      axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\".concat(searching)).then(response => {\n        const data = response.data.items;\n        console.log(data);\n        setBookData(data);\n      });\n    }\n  }, [searching]);\n\n  const handleChange = event => {\n    console.log(event.target.value);\n    setSearchTerm(event.target.value);\n  };\n\n  const submitForm = event => {\n    event.preventDefault();\n    setSearching(searchTerm);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: submitForm,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Search: \"), React.createElement(\"input\", {\n    id: \"search\",\n    type: \"text\",\n    name: \"textfield\",\n    placeholder: \"Search\",\n    value: searchTerm,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Search\")), bookData.map(item => React.createElement(\"div\", {\n    key: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: \"/book-list/\".concat(item.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: item.volumeInfo.imageLinks.thumbnail,\n    alt: \"book cover\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, item.volumeInfo.title)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, item.volumeInfo.subtitle), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, item.volumeInfo.publishedDate), React.createElement(Ratings, {\n    rating: item.volumeInfo.ratingsCount // rating={item.volumeInfo.averageRating}\n    ,\n    widgetDimensions: \"25px\",\n    widgetSpacings: \"1px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(Ratings.Widget, {\n    widgetRatedColor: \"gold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })))));\n}\n\nexport default BookList;","map":{"version":3,"sources":["C:\\Users\\vampi\\Desktop\\LambdaSchool\\Week 8 Unit 2 Build Week\\FE\\bookr\\src\\components\\BookList.js"],"names":["React","useEffect","useState","Link","axios","BookList","props","bookData","setBookData","searchTerm","setSearchTerm","searching","setSearching","get","then","response","data","items","console","log","handleChange","event","target","value","submitForm","preventDefault","map","item","id","volumeInfo","imageLinks","thumbnail","title","subtitle","publishedDate","ratingsCount"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport axios from 'axios'\r\n// import Ratings from 'react-ratings-declarative';\r\n\r\n\r\n\r\n\r\nfunction BookList (props){\r\n\r\n     const [bookData, setBookData] = useState([]);\r\n\r\n\r\n     const [searchTerm, setSearchTerm] = useState('')\r\n     const [searching, setSearching] = useState('')\r\n\r\n     useEffect(() => {\r\n\r\n          if (searching !== ''){\r\n               axios\r\n                    .get(`https://www.googleapis.com/books/v1/volumes?q=${searching}`)\r\n                    .then(response => {\r\n                         const data = response.data.items;\r\n                         console.log(data)\r\n                         setBookData(data);\r\n                    })\r\n          }\r\n     }, [searching])\r\n\r\n\r\n     \r\n    \r\n\r\n     const handleChange = event => {\r\n          console.log(event.target.value)\r\n          setSearchTerm(event.target.value)\r\n     }\r\n\r\n     const submitForm = event => {\r\n          event.preventDefault();\r\n          setSearching(searchTerm)\r\n     }\r\n    \r\n\r\n     return(\r\n          <div>\r\n               <form onSubmit={submitForm}>\r\n                    <label htmlFor=\"search\">Search: </label>\r\n                    <input \r\n                         id=\"search\"\r\n                         type=\"text\"\r\n                         name=\"textfield\"\r\n                         placeholder=\"Search\"\r\n                         value={searchTerm}\r\n                         onChange={handleChange}\r\n                    />\r\n                    <button type=\"submit\">Search</button>\r\n               </form>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n               {\r\n                    bookData.map(item => (\r\n                         <div key={item.id}>\r\n                              <Link to={`/book-list/${item.id}`}>\r\n                                   <img src={item.volumeInfo.imageLinks.thumbnail} alt=\"book cover\"/>\r\n                                   <h3>{item.volumeInfo.title}</h3>\r\n                              </Link>\r\n                              <p>{item.volumeInfo.subtitle}</p>\r\n                              <p>{item.volumeInfo.publishedDate}</p>\r\n                                 <Ratings\r\n                                   rating={item.volumeInfo.ratingsCount}\r\n                                   // rating={item.volumeInfo.averageRating}\r\n                                   widgetDimensions=\"25px\"\r\n                                   widgetSpacings=\"1px\"\r\n                              >\r\n                                   <Ratings.Widget widgetRatedColor=\"gold\" />\r\n                                   <Ratings.Widget widgetRatedColor=\"gold\" />\r\n                                   <Ratings.Widget widgetRatedColor=\"gold\" />\r\n                                   <Ratings.Widget widgetRatedColor=\"gold\" />\r\n                                   <Ratings.Widget widgetRatedColor=\"gold\" />\r\n                              </Ratings>\r\n                         </div>\r\n                    ))\r\n               }\r\n          </div>\r\n     )\r\n}\r\nexport default BookList "]},"metadata":{},"sourceType":"module"}